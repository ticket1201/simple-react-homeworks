{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","styles","message","src","avatar","alt","pop","name","text","time","messageData","HW1","SuperButton","red","restProps","finalClassName","s","default","Affair","affair","affairPriority","priority","nameLow","nameMiddle","nameHigh","setStylePriority","affairButton","onClick","_id","deleteAffairCallback","children","Affairs","mappedAffairs","data","map","a","key","wrapper","buttonWrapper","button","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","console","log","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","errorInput","e","currentTarget","value","Greeting","setNameCallback","addUser","totalUsers","inputClass","input","hw3","errorText","total","GreetingContainer","users","addUserCallback","setName","setError","length","trim","alert","HW3","setUsers","v1","SuperCheckbox","onChangeChecked","checkbox","checked","HW4","setText","showAlert","setChecked","column","blue","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.55555e19.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"affair\":\"Affairs_affair__2WxZD\",\"affairButton\":\"Affairs_affairButton__2c0vV\",\"affairPriority\":\"Affairs_affairPriority__ye56M\",\"button\":\"Affairs_button__1EKi-\",\"wrapper\":\"Affairs_wrapper__2HMv9\",\"buttonWrapper\":\"Affairs_buttonWrapper__3gXMR\",\"name\":\"Affairs_name__1uOSC\",\"nameLow\":\"Affairs_nameLow__eP5Cu\",\"nameMiddle\":\"Affairs_nameMiddle__iquqr\",\"nameHigh\":\"Affairs_nameHigh__vm3lW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Greeting_error___d5h-\",\"input\":\"Greeting_input__k0ZKm\",\"button\":\"Greeting_button__2nrOs\",\"errorText\":\"Greeting_errorText__1ib5z\",\"total\":\"Greeting_total__362Pt\",\"hw3\":\"Greeting_hw3__3IIub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2Kjcu\",\"pop\":\"Message_pop__1SoHd\",\"name\":\"Message_name__1Gi8d\",\"text\":\"Message_text__patf8\",\"time\":\"Message_time__2gBl_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2ioif\",\"red\":\"SuperButton_red__3RAhU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2xeQj\",\"errorInput\":\"SuperInputText_errorInput__ANinb\",\"error\":\"SuperInputText_error__1zQ63\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"HW4_column__34RjA\",\"testSpanError\":\"HW4_testSpanError__v7OBB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2rbjo\",\"spanClassName\":\"SuperCheckbox_spanClassName__3Q__A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1YZwf\"};","import React from 'react'\r\n// import {inspect} from 'util';\r\nimport styles from './Message.module.css'\r\n\r\nexport type messageDataType = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string\r\n}\r\n\r\n\r\nfunction Message(props: messageDataType) {\r\n    return (\r\n        <div className={styles.message}>\r\n            <img src={props.avatar} alt=\"Ava\"/>\r\n            <div className={styles.pop}>\r\n                <p className={styles.name}>{props.name}</p>\r\n                <p className={styles.text}>{props.message}</p>\r\n                <p className={styles.time}>{props.time}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message, {messageDataType} from './Message';\r\n\r\nconst messageData:messageDataType = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className? className : ''}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react'\r\nimport {AffairType} from './HW2';\r\nimport s from './Affairs.module.css'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = (_id: number) => {\r\n        props.deleteAffairCallback(_id)\r\n    }// need to fix\r\n\r\n    const setStylePriority = () => {\r\n        switch (props.affair.priority) {\r\n            case 'low':\r\n                return s.nameLow\r\n            case 'middle':\r\n                return s.nameMiddle\r\n            case 'high':\r\n                return s.nameHigh\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.affair}>\r\n            <div className={s.name}>{props.affair.name}</div>\r\n            <div className={s.affairPriority + ' ' + setStylePriority()}>{props.affair.priority}</div>\r\n\r\n            <SuperButton red={true} className={s.affairButton} onClick={() => deleteCallback(props.affair._id)} children={\"X\"}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport s from './Affairs.module.css'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: AffairType[]\r\n    setFilter: (filter:FilterType)=>void\r\n    deleteAffairCallback: (_id:number)=>void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {props.setFilter('all')} // need to fix\r\n    const setHigh = () => {props.setFilter('high')}\r\n    const setMiddle = () => {props.setFilter('middle')}\r\n    const setLow = () => {props.setFilter('low')}\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n\r\n            {mappedAffairs}\r\n            <div className={s.buttonWrapper}>\r\n                <SuperButton className={s.button} onClick={setAll} children={\"All\"}/>\r\n                <SuperButton className={s.button} onClick={setHigh} children={\"High\"}/>\r\n                <SuperButton className={s.button} onClick={setMiddle} children={\"Middle\"}/>\r\n                <SuperButton className={s.button} onClick={setLow} children={\"Low\"}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'low' | 'middle' | 'high' // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n}\r\n\r\n// need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n    else return affairs.filter(a => a.priority === filter)\r\n}\r\n\r\n\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\r\n    console.log(affairs)// need to fix any\r\n    return affairs.filter(a => a._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n"," import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.errorInput} ${className  ? className : ''}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\r\nimport SuperInputText from '../h4/common/c1-SuperInputText/SuperInputText';\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (event: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : s.input; // need to fix with (?:)\r\n\r\n    return (\r\n        <div className={s.hw3}>\r\n            <SuperInputText value={name} onChange={setNameCallback} className={inputClass} error={error} spanClassName={s.errorText} onEnter={addUser}/>\r\n            <SuperButton className={s.button} onClick={addUser} children={'add'}/>\r\n            <span className={s.total}>Total users: {totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from './HW3';\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: UserType[] // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        setError('')\r\n        setName(e.currentTarget.value.trim())\r\n\r\n        // need to fix\r\n    }\r\n    const addUser = () => {\r\n        if (name.trim()) {\r\n            alert(`Hello ${name}!`)\r\n            addUserCallback(name)\r\n            setName('')\r\n        } else {\r\n            setError('Name is required')\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from 'uuid';\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n\r\n\r\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\r\n\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        setUsers([{ _id: v1(), 'name': name}, ...users]) // need to fix\r\n        console.log(users)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        onChange && onChange(e)\r\n\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from '../../../p2-homeworks/h2/HW2';\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from '../../../p2-homeworks/h4/HW4';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}